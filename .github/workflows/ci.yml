name: CI - Code Quality & Documentation

on:
  pull_request:
  push:
    branches: [main, master]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.3

    - name: Install terraform-docs
      run: |
        curl -sSLo ./terraform-docs.tar.gz https://terraform-docs.io/dl/v0.17.0/terraform-docs-v0.17.0-$(uname)-amd64.tar.gz
        tar -xzf terraform-docs.tar.gz
        chmod +x terraform-docs
        sudo mv terraform-docs /usr/local/bin/terraform-docs

    - name: Install tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Check for direct README.md changes in terraform folders
      run: |
        # Get list of changed files
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
        else
          CHANGED_FILES=$(git diff --name-only HEAD~1)
        fi
        
        # Check for README.md changes in terraform subdirectories
        README_CHANGES=$(echo "$CHANGED_FILES" | grep -E "patterns/.*/terraform/README\.md$" || true)
        
        if [ ! -z "$README_CHANGES" ]; then
          echo "‚ùå ERROR: Direct changes to README.md files in terraform folders are not allowed!"
          echo "üìù Changed README.md files:"
          echo "$README_CHANGES"
          echo ""
          echo "‚úÖ Instead, make changes to the corresponding .header.md files:"
          for readme in $README_CHANGES; do
            header_file=$(dirname "$readme")/.header.md
            echo "  - $readme ‚Üí $header_file"
          done
          echo ""
          echo "üí° README.md files are auto-generated by terraform-docs from:"
          echo "   - .header.md (for custom content)"
          echo "   - *.tf files (for variables, outputs, resources)"
          exit 1
        fi

    - name: Run terraform-docs and terraform-fmt (auto-fixable)
      id: docs-fmt
      continue-on-error: true
      run: |
        # Run only terraform_docs and terraform_fmt
        pre-commit run terraform_docs --all-files || echo "terraform_docs_failed=true" >> $GITHUB_OUTPUT
        pre-commit run terraform_fmt --all-files || echo "terraform_fmt_failed=true" >> $GITHUB_OUTPUT

    - name: Auto-commit documentation and formatting fixes
      if: steps.docs-fmt.outputs.terraform_docs_failed == 'true' || steps.docs-fmt.outputs.terraform_fmt_failed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes to commit
        if ! git diff --quiet; then
          git add -A
          git commit -m "Auto-fix: Update terraform documentation and formatting
          
          - terraform-docs: Update README.md files with latest variable/output documentation
          - terraform fmt: Format .tf files according to Terraform standards
          
          [skip ci]"
          git push
          echo "‚úÖ Auto-committed documentation and formatting fixes"
        else
          echo "‚ÑπÔ∏è No changes to commit after terraform-docs and terraform-fmt"
        fi

    - name: Run validation and linting (manual fix required)
      run: |
        echo "üîç Running terraform validation and linting (these require manual fixes if they fail)..."
        
        # These will fail the CI if they find issues
        pre-commit run terraform_validate --all-files
        pre-commit run terraform_tflint --all-files

    - name: Run other checks
      run: |
        echo "üîç Running other code quality checks..."
        pre-commit run check-merge-conflict --all-files
        pre-commit run end-of-file-fixer --all-files
        pre-commit run trailing-whitespace --all-files
        pre-commit run check-yaml --all-files
        pre-commit run check-json --all-files
